import React from 'react';

interface AngryCharacterProps {
  width?: number;
  height?: number;
  isPressed?: boolean;
}

const AngryCharacter: React.FC<AngryCharacterProps> = ({ 
  width = 86, 
  height = 61, 
  isPressed = false 
}) => {
  // 올라온 상태 (기본 상태)만 사용
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={width} height={height} viewBox="0 0 94 58" fill="none">
      <path d="M49.6287 55.5007C48.8209 56.5129 47.3107 56.5934 46.3998 55.6728L3.8069 12.6243C2.52283 11.3265 3.32449 9.11979 5.14216 8.94878L88.3361 1.1218C90.2363 0.94302 91.4202 3.13338 90.2297 4.62521L49.6287 55.5007Z" fill="#EE4947"/>
      <path d="M46.7971 19.9537C46.7971 20.8174 46.6015 21.6725 46.2216 22.4704C45.8416 23.2683 45.2846 23.9933 44.5824 24.604C43.8803 25.2147 43.0467 25.6991 42.1293 26.0296C41.212 26.3601 40.2287 26.5302 39.2357 26.5302C38.2427 26.5302 37.2595 26.3601 36.3421 26.0296C35.4247 25.6991 34.5911 25.2147 33.889 24.604C33.1869 23.9933 32.6299 23.2683 32.2499 22.4704C31.8699 21.6725 31.6743 20.8174 31.6743 19.9537L39.2357 19.9537H46.7971Z" fill="#F5F5F5"/>
      <path d="M61.8875 19.9537C61.8875 20.8174 61.6919 21.6726 61.3119 22.4704C60.9319 23.2683 60.3749 23.9933 59.6728 24.604C58.9706 25.2147 58.1371 25.6991 57.2197 26.0296C56.3023 26.3601 55.319 26.5302 54.3261 26.5302C53.3331 26.5302 52.3498 26.3601 51.4324 26.0296C50.515 25.6991 49.6815 25.2147 48.9793 24.604C48.2772 23.9933 47.7202 23.2683 47.3402 22.4704C46.9602 21.6726 46.7646 20.8174 46.7646 19.9537L54.3261 19.9537H61.8875Z" fill="#F5F5F5"/>
      <path d="M43.9506 20.0132C43.9506 20.5534 43.8282 21.0883 43.5905 21.5874C43.3528 22.0864 43.0045 22.5399 42.5653 22.9219C42.1261 23.3039 41.6047 23.6069 41.0309 23.8136C40.457 24.0203 39.842 24.1267 39.2209 24.1267C38.5998 24.1267 37.9847 24.0203 37.4109 23.8136C36.8371 23.6069 36.3157 23.3039 35.8765 22.9219C35.4373 22.5399 35.0889 22.0864 34.8512 21.5874C34.6135 21.0883 34.4912 20.5534 34.4912 20.0132L39.2209 20.0132H43.9506Z" fill="#0A0A0A"/>
      <path d="M59.0072 20.0132C59.0072 20.5534 58.8849 21.0883 58.6472 21.5874C58.4095 22.0864 58.0611 22.5399 57.6219 22.9219C57.1827 23.3039 56.6613 23.6069 56.0875 23.8136C55.5137 24.0203 54.8986 24.1267 54.2775 24.1267C53.6564 24.1267 53.0414 24.0203 52.4676 23.8136C51.8937 23.6069 51.3723 23.3039 50.9331 22.9219C50.494 22.5399 50.1456 22.0864 49.9079 21.5874C49.6702 21.0883 49.5479 20.5534 49.5479 20.0132L54.2775 20.0132H59.0072Z" fill="#0A0A0A"/>
      <path d="M49.0166 28.0076C49.0166 26.0488 44.9626 25.9508 44.9626 28.0076" stroke="#0A0A0A" strokeWidth="1.04345" strokeLinecap="round"/>
      <path d="M36.404 21.5065C36.404 21.9481 36.2023 22.3716 35.8433 22.6838C35.4842 22.9961 34.9973 23.1715 34.4896 23.1715C33.9819 23.1715 33.4949 22.9961 33.1359 22.6838C32.7769 22.3716 32.5752 21.9481 32.5752 21.5065L34.4896 21.5065H36.404Z" fill="#F5F5F5"/>
      <path d="M52.1696 21.5065C52.1696 21.9481 51.9679 22.3716 51.6089 22.6838C51.2499 22.9961 50.7629 23.1715 50.2552 23.1715C49.7475 23.1715 49.2606 22.9961 48.9015 22.6838C48.5425 22.3716 48.3408 21.9481 48.3408 21.5065L50.2552 21.5065H52.1696Z" fill="#F5F5F5"/>
    </svg>
  );
};

const JumpingAngryCharacter = () => {
  return (
    <div style={{
      width: '100vw',
      height: '100vh',
      backgroundColor: '#000000',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      overflow: 'hidden'
    }}>
      <style>
        {`
          @keyframes angryBounce {
            /* 시작: 점프 준비 상태로 시작 */
            0% {
              transform: translateY(0) scaleX(1.03) scaleY(0.97);
            }
            /* 점프: 위로 올라가면서 가로로 퍼지고 세로로 납작 */
            12% {
              transform: translateY(-8px) scaleX(1.08) scaleY(0.94);
            }
            /* 계속 상승: 가로로 퍼진 상태 유지 */
            27% {
              transform: translateY(-35px) scaleX(1.12) scaleY(0.90);
            }
            /* 공중 정점: 가로로 퍼진 상태 */
            42% {
              transform: translateY(-45px) scaleX(1.10) scaleY(0.92);
            }
            /* 하강 시작: 여전히 퍼짐 */
            52% {
              transform: translateY(-35px) scaleX(1.12) scaleY(0.90);
            }
            /* 착지 직전: 서서히 원래 크기로 */
            57% {
              transform: translateY(-8px) scaleX(1.06) scaleY(0.95);
            }
            /* 착지: 거의 원래 크기 */
            58% {
              transform: translateY(0) scaleX(1.02) scaleY(0.98);
            }
            /* 착지 후 살짝 오버슈팅 */
            61% {
              transform: translateY(0) scaleX(0.98) scaleY(1.01);
            }
            /* 정상 상태로 부드럽게 복귀 */
            72% {
              transform: translateY(0) scaleX(1.0) scaleY(1.0);
            }
            /* 다음 점프 준비로 자연스럽게 전환 */
            100% {
              transform: translateY(0) scaleX(1.03) scaleY(0.97);
            }
          }

          .character-wrapper {
            animation: angryBounce 1.4s cubic-bezier(0.45, 0, 0.55, 1) infinite;
            transform-origin: center bottom;
            transition: none;
          }
          
          .character-wrapper svg {
            display: block;
          }
        `}
      </style>
      <div className="character-wrapper">
        <AngryCharacter width={220} height={140} isPressed={false} />
      </div>
    </div>
  );
};

export default AngryCharacter;
export { JumpingAngryCharacter };
